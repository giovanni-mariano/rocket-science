@startuml
Title UML Sequence Diagram for evaluating "state + motor%d_dt(state)*dt"
Actor main
activate motor
activate chamber
activate grain
activate gas
activate combustion
activate nozzle
activate state
main -> motor: d_dt
motor -> chamber: generate
chamber -> chamber: burn_rate
chamber -> state: burn_depth
state --> chamber
chamber -> grain: surface_area
grain --> chamber
chamber -> grain: rho_solid
grain --> chamber
chamber -> combustion: T_flame
combustion --> chamber
chamber -> gas: c_p
gas --> chamber

activate generation_rate
chamber -> generation_rate: <<construct>>
generation_rate --> chamber
chamber --> motor
motor -> chamber: outflow
chamber -> state: energy
state --> chamber
chamber -> state: mass
state --> chamber
chamber -> state: burn_depth
state --> chamber
chamber -> grain: volume
gas --> chamber
chamber -> gas: c_p
gas --> chamber
chamber -> gas: T
gas --> chamber
chamber -> gas: p
gas --> chamber
chamber -> nozzle: area
nozzle --> chamber
chamber -> gas: g
gas --> chamber
chamber -> gas: R_gas
gas --> chamber

activate flow_rate
chamber -> flow_rate: <<construct>>
flow_rate --> chamber
chamber --> motor
motor -> generation_rate: m_dot_gen
generation_rate --> motor
motor -> flow_rate: m_dot_out
flow_rate --> motor
motor -> generation_rate: e_dot_gen
generation_rate --> motor
motor -> flow_rate: e_dot_out
flow_rate --> motor
motor -> chamber: burn_rate
chamber -> state: energy
state --> chamber
chamber -> state: mass
state --> chamber
chamber -> state: burn_depth
state --> chamber
chamber -> grain: volume
grain --> chamber
chamber -> gas: p
gas --> chamber
chamber -> combustion: burn_rate
combustion --> chamber
chamber --> motor

activate state_rate_t
motor -> state_rate_t: <<construct>>
state_rate_t --> motor
deactivate generation_rate
deactivate flow_rate
motor --> main
main -> state_rate_t: operator (  *  )
state_rate_t -> persistent_state_t: <<construct>
activate persistent_state_t
persistent_state_t --> state_rate_t
state_rate_t --> main
deactivate persistent_state_t
deactivate state_rate_t

main -> state: operator (  +  )
state --> main

@enduml
